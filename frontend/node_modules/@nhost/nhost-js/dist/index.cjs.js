"use strict";var E=Object.defineProperty,$=Object.defineProperties;var _=Object.getOwnPropertyDescriptors;var d=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var p=(t,e,s)=>e in t?E(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,h=(t,e)=>{for(var s in e||(e={}))A.call(e,s)&&p(t,s,e[s]);if(d)for(var s of d(e))m.call(e,s)&&p(t,s,e[s]);return t},T=(t,e)=>$(t,_(e));var b=(t,e)=>{var s={};for(var r in t)A.call(t,r)&&e.indexOf(r)<0&&(s[r]=t[r]);if(t!=null&&d)for(var r of d(t))e.indexOf(r)<0&&m.call(t,r)&&(s[r]=t[r]);return s};Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var N=require("@nhost/hasura-auth-js"),U=require("@nhost/hasura-storage-js"),L=require("axios"),H=require("graphql");function G(t){return t&&typeof t=="object"&&"default"in t?t:{default:t}}var S=G(L);class q{constructor(e){const{url:s,adminSecret:r}=e;this.accessToken=null,this.adminSecret=r,this.instance=S.default.create({baseURL:s})}async call(e,s,r){const c=h(h({},this.generateAccessTokenHeaders()),r==null?void 0:r.headers);let n;try{n=await this.instance.post(e,s,T(h({},r),{headers:c}))}catch(i){if(i instanceof Error)return{res:null,error:i}}return n?{res:n,error:null}:{res:null,error:new Error("Unable to make post request to funtion")}}setAccessToken(e){if(!e){this.accessToken=null;return}this.accessToken=e}generateAccessTokenHeaders(){return this.adminSecret?{"x-hasura-admin-secret":this.adminSecret}:this.accessToken?{Authorization:`Bearer ${this.accessToken}`}:{}}}class w{constructor(e){const{url:s,adminSecret:r}=e;this.url=s,this.accessToken=null,this.adminSecret=r,this.instance=S.default.create({baseURL:s})}async request(e,s,r){const c=h(h({},this.generateAccessTokenHeaders()),r==null?void 0:r.headers);try{const n="",u=(await this.instance.post("",{operationName:n||void 0,query:typeof e=="string"?e:H.print(e),variables:s},T(h({},r),{headers:c}))).data,{data:o}=u;return u.errors?{data:null,error:u.errors}:typeof o!="object"||Array.isArray(o)||o===null?{data:null,error:new Error("incorrect response data from GraphQL server")}:{data:o,error:null}}catch(n){return n instanceof Error?{data:null,error:n}:(console.error(n),{data:null,error:new Error("Unable to get do GraphQL request")})}}getUrl(){return this.url}setAccessToken(e){if(!e){this.accessToken=null;return}this.accessToken=e}generateAccessTokenHeaders(){return this.adminSecret?{"x-hasura-admin-secret":this.adminSecret}:this.accessToken?{Authorization:`Bearer ${this.accessToken}`}:{}}}const j=/^localhost(:\d+)*$/g;function k(t,e){const{backendUrl:s,subdomain:r,region:c}=t;if(!s&&!r)throw new Error("Either `backendUrl` or `subdomain` must be set.");if(s)return`${s}/v1/${e}`;if(!r)throw new Error("`subdomain` must be set if `backendUrl` is not set.");const n=r.match(j);if(n&&n.length>0){const i=n[0];return i==="localhost"?`http://localhost:1337/v1/${e}`:`http://${i}/v1/${e}`}if(!c)throw new Error('`region` must be set when using a `subdomain` other than "localhost".');return`https://${r}.${e}.${c}.nhost.run/v1`}class v{constructor(F){var f=F,{refreshIntervalTime:e,clientStorageGetter:s,clientStorageSetter:r,clientStorage:c,clientStorageType:n,autoRefreshToken:i,autoSignIn:u,adminSecret:o,devTools:C,start:y=!0}=f,l=b(f,["refreshIntervalTime","clientStorageGetter","clientStorageSetter","clientStorage","clientStorageType","autoRefreshToken","autoSignIn","adminSecret","devTools","start"]);var g;this.auth=new N.HasuraAuthClient({url:k(l,"auth"),refreshIntervalTime:e,clientStorageGetter:s,clientStorageSetter:r,clientStorage:c,clientStorageType:n,autoRefreshToken:i,autoSignIn:u,start:y}),this.storage=new U.HasuraStorageClient({url:k(l,"storage"),adminSecret:o}),this.functions=new q({url:k(l,"functions"),adminSecret:o}),this.graphql=new w({url:k(l,"graphql"),adminSecret:o}),this.storage.setAccessToken(this.auth.getAccessToken()),this.functions.setAccessToken(this.auth.getAccessToken()),this.graphql.setAccessToken(this.auth.getAccessToken()),(g=this.auth.client)==null||g.onStart(()=>{this.auth.onAuthStateChanged((a,O)=>{a==="SIGNED_OUT"&&(this.storage.setAccessToken(void 0),this.functions.setAccessToken(void 0),this.graphql.setAccessToken(void 0))}),this.auth.onTokenChanged(a=>{this.storage.setAccessToken(a==null?void 0:a.accessToken),this.functions.setAccessToken(a==null?void 0:a.accessToken),this.graphql.setAccessToken(a==null?void 0:a.accessToken)})}),this._adminSecret=o,this.devTools=C}get adminSecret(){return this._adminSecret}set adminSecret(e){this._adminSecret=e,this.storage.setAdminSecret(e)}}const x=t=>new v(t);exports.NhostClient=v;exports.NhostFunctionsClient=q;exports.NhostGraphqlClient=w;exports.createClient=x;
//# sourceMappingURL=index.cjs.js.map
