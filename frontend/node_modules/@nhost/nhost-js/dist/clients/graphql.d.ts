import { AxiosRequestConfig } from 'axios';
import { DocumentNode } from 'graphql';
import { GraphqlRequestResponse } from '../utils/types';
export interface NhostGraphqlConstructorParams {
    /**
     * GraphQL endpoint.
     */
    url: string;
    /**
     * Admin secret. When set, it is sent as an `x-hasura-admin-secret` header for all requests.
     */
    adminSecret?: string;
}
/**
 * @alias GraphQL
 */
export declare class NhostGraphqlClient {
    private url;
    private instance;
    private accessToken;
    private adminSecret?;
    constructor(params: NhostGraphqlConstructorParams);
    /**
     * Use `nhost.graphql.request` to send a GraphQL request. For more serious GraphQL usage we recommend using a GraphQL client such as Apollo Client (https://www.apollographql.com/docs/react).
     *
     * @example
     * ```ts
     * const CUSTOMERS = gql`
     *  query {
     *   customers {
     *    id
     *    name
     *  }
     * }
     * `
     * const { data, error } = await nhost.graphql.request(CUSTOMERS)
     * ```
     *
     * @docs https://docs.nhost.io/reference/javascript/nhost-js/graphql/request
     */
    request<T = any, V = any>(document: string | DocumentNode, variables?: V, config?: AxiosRequestConfig): Promise<GraphqlRequestResponse<T>>;
    /**
     * Use `nhost.graphql.getUrl` to get the GraphQL URL.
     *
     * @example
     * ```ts
     * const url = nhost.graphql.getUrl();
     * ```
     *
     * @docs https://docs.nhost.io/reference/javascript/nhost-js/graphql/get-url
     */
    getUrl(): string;
    /**
     * Use `nhost.graphql.setAccessToken` to a set an access token to be used in subsequent graphql requests. Note that if you're signin in users with `nhost.auth.signIn()` the access token will be set automatically.
     *
     * @example
     * ```ts
     * nhost.graphql.setAccessToken('some-access-token')
     * ```
     *
     * @docs https://docs.nhost.io/reference/javascript/nhost-js/graphql/set-access-token
     */
    setAccessToken(accessToken: string | undefined): void;
    private generateAccessTokenHeaders;
}
//# sourceMappingURL=graphql.d.ts.map