import { AxiosRequestConfig } from 'axios';
import { FunctionCallResponse } from '../utils/types';
export interface NhostFunctionsConstructorParams {
    /**
     * Serverless Functions endpoint.
     */
    url: string;
    /**
     * Admin secret. When set, it is sent as an `x-hasura-admin-secret` header for all requests.
     */
    adminSecret?: string;
}
/**
 * @alias Functions
 */
export declare class NhostFunctionsClient {
    private instance;
    private accessToken;
    private adminSecret?;
    constructor(params: NhostFunctionsConstructorParams);
    /**
     * Use `nhost.functions.call` to call (sending a POST request to) a serverless function.
     *
     * @example
     * ```ts
     * await nhost.functions.call('send-welcome-email', { email: 'joe@example.com', name: 'Joe Doe' })
     * ```
     *
     * @docs https://docs.nhost.io/reference/javascript/nhost-js/functions/call
     */
    call<T = unknown, D = any>(url: string, data: D, config?: AxiosRequestConfig): Promise<FunctionCallResponse<T>>;
    /**
     * Use `nhost.functions.setAccessToken` to a set an access token to be used in subsequent functions requests. Note that if you're signin in users with `nhost.auth.signIn()` the access token will be set automatically.
     *
     * @example
     * ```ts
     * nhost.functions.setAccessToken('some-access-token')
     * ```
     *
     * @docs https://docs.nhost.io/reference/javascript/nhost-js/functions/set-access-token
     */
    setAccessToken(accessToken: string | undefined): void;
    private generateAccessTokenHeaders;
}
//# sourceMappingURL=functions.d.ts.map