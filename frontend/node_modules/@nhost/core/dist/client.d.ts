import { AuthMachine, AuthMachineOptions } from './machines';
import type { AuthInterpreter } from './types';
export declare type NhostClientOptions = AuthMachineOptions & {
    /** @internal create and start xstate interpreter on creation. With React, it is started inside the Nhost provider */
    start?: boolean;
};
/**
 * @internal
 * This is a private API.
 */
export declare class AuthClient {
    readonly backendUrl: string;
    readonly clientUrl: string;
    readonly machine: AuthMachine;
    private _interpreter?;
    private _channel?;
    private _subscriptions;
    constructor({ clientStorageType, autoSignIn, autoRefreshToken, start, backendUrl, clientUrl, devTools, ...defaultOptions }: NhostClientOptions);
    get interpreter(): AuthInterpreter | undefined;
    set interpreter(interpreter: AuthInterpreter | undefined);
    onStart(fn: (client: AuthClient) => void): void;
}
//# sourceMappingURL=client.d.ts.map