[{"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/index.js":"1","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/App.js":"2","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Layout.js":"3","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Home.jsx":"4","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Notes.jsx":"5","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Signup.jsx":"6","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Stopwatch.jsx":"7","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Login.jsx":"8","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Timer.jsx":"9","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/firebase.js":"10","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Time.js":"11","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Navbar.jsx":"12","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Sidebar.jsx":"13","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Settings.jsx":"14","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/elements/Text/index.js":"15","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/elements/Card/index.js":"16","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/elements/Button/index.js":"17"},{"size":442,"mtime":1683275619907,"results":"18","hashOfConfig":"19"},{"size":1970,"mtime":1683275619887,"results":"20","hashOfConfig":"19"},{"size":430,"mtime":1683275619902,"results":"21","hashOfConfig":"19"},{"size":7578,"mtime":1683275619908,"results":"22","hashOfConfig":"19"},{"size":166,"mtime":1683275619910,"results":"23","hashOfConfig":"19"},{"size":3795,"mtime":1683275895681,"results":"24","hashOfConfig":"19"},{"size":142,"mtime":1683275619911,"results":"25","hashOfConfig":"19"},{"size":5558,"mtime":1683275619909,"results":"26","hashOfConfig":"19"},{"size":211,"mtime":1683275619911,"results":"27","hashOfConfig":"19"},{"size":645,"mtime":1683275743503,"results":"28","hashOfConfig":"19"},{"size":3298,"mtime":1683275619905,"results":"29","hashOfConfig":"19"},{"size":994,"mtime":1683275619903,"results":"30","hashOfConfig":"19"},{"size":2396,"mtime":1683275619904,"results":"31","hashOfConfig":"19"},{"size":1990,"mtime":1683275619904,"results":"32","hashOfConfig":"19"},{"size":188,"mtime":1683275619901,"results":"33","hashOfConfig":"19"},{"size":221,"mtime":1683275619899,"results":"34","hashOfConfig":"19"},{"size":312,"mtime":1683275619898,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"yu8j4h",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"39"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/index.js",[],[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/App.js",["92","93","94"],[],"import React, {useState, useEffect} from 'react';\nimport bg from './components/assets/bg.png';\n// import Sidebar from './components/widgets/Sidebar';\nimport Home from './page/Home';\nimport Notes from './page/Notes';\nimport Signup from './page/Signup';\nimport Login from './page/Login';\nimport Timer from './page/Timer';\nimport Stopwatch from './page/Stopwatch';\nimport {Routes, Route} from 'react-router-dom';\n// import Navbar from './components/widgets/Navbar';\nimport Layout from './components/widgets/Layout';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App bg-primary\">\n        <section>          \n          <div>            \n            <Routes>\n           \n                <Route \n                  path=\"/home\"\n                  element={\n                    <Layout>\n                      < Home />\n                    </Layout>\n                  \n                  }\n                />\n\n                <Route \n                  path=\"/notes\"\n                  element={\n                    <Layout>\n                      < Notes />\n                    </Layout>\n                  \n                  }\n                />\n\n                <Route \n                  path=\"/timer\"\n                  element={\n                    <Layout>\n                      < Timer />\n                    </Layout>\n                  \n                  }\n                />\n                \n                <Route \n                  path=\"/stopwatch\"\n                  element={\n                    <Layout>\n                      < Stopwatch />\n                    </Layout>\n                  \n                  }\n                />              \n              \n              <Route path=\"/\" element={<Signup/>}/>\n              <Route path=\"/login\" element={<Login/>}/>\n            </Routes>          \n          </div>\n        </section>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Layout.js",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Home.jsx",["95"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport Card from '../components/elements/Card';\nimport Text from '../components/elements/Text';\nimport Button from '../components/elements/Button';\nimport Time from '../components/widgets/Time';\nimport Settings from '../components/widgets/Settings';\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from '../firebase'; \n\nconst Home = () => {\n    const [ openTaskInput, setOpenTaskInput ] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [workMin, setWorkMin] = useState(45);\n    const [breakMin, setBreakMin] = useState(15);\n    const inputRef = useRef(null);\n    const [remainingTime, setRemainingTime] = useState({\n        seconds: '00',\n        minutes: '00',\n        hours: '00',\n        days: '00'\n    })\n\n    const handleTaskButton = () => {\n        setOpenTaskInput(true);\n        inputRef.current.focus();\n    }\n\n    const handleSettings = () => {\n        setOpen(true);\n    }\n\n    useEffect(()=>{\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n              // User is signed in, see docs for a list of available properties\n              // https://firebase.google.com/docs/reference/js/firebase.User\n              const uid = user.uid;\n              // ...\n              console.log(\"uid\", uid)\n            } else {\n              // User is signed out\n              // ...\n              console.log(\"user is logged out\")\n            }\n          });\n\n        const intervalID = setInterval(()=>{\n            // console.log(\"yes\")\n        }, 1000)  \n\n        return () => clearInterval(intervalID);\n    }, [])\n\n  return (\n    <section className=\"text-white pt-10 pb-20\">        \n\n        <section className=\"grid grid-cols-2 gap-4\">\n            <Card className=\"text-center pb-16\">\n                <Text className=\"font-semibold text-xl\">\n                    Ready, set, focus!\n                </Text>\n\n                <Text className=\"text-sm pt-2\">\n                    Achieve your daily goals and get more\n                    done using the Pomodoro Technique\n                </Text>\n\n                <div className=\"flex justify-center items-center mt-8\">\n                    <div className=\"py-2 px-4 rounded-md border-b border-x-0 border-x-white border-t-0 border-t-white border-white \">\n                        <div className='px-4 flex space-x-4 rounded-md'>\n                            <div className='flex flex-col'>\n                                <span className=\"text-4xl font-semibold\">\n                                    55\n                                </span>\n                                <span className=\"text-xs pt-2\">\n                                    mins\n                                </span>\n                            </div>\n\n                            <div className='flex flex-col justify-between'>\n                                <span>\n                                    ^\n                                </span>\n                                <span>\n                                    v\n                                </span>\n                            </div>\n                        </div>                        \n                    </div>                    \n                </div>\n\n                <Text className=\"text-sm mt-6\">\n                    You will have 3 breaks\n                </Text>\n\n                <Button className=\"mt-6\">\n                    Start focus session\n                </Button>\n            </Card>\n\n            <Card className=\"py-4\">\n                <div>\n                    <p>\n                        {remainingTime.days} days\n                    </p>\n                    <p>\n                        {remainingTime.hours} hours\n                    </p>\n                    <p>\n                        {remainingTime.minutes} minutes\n                    </p>\n                    <p>\n                        {remainingTime.seconds} seconds\n                    </p>\n                </div>\n\n                <div>\n                    <div className=\"flex justify-between\">\n                        <Text className=\"text-sm font-semibold\">\n                            Daily progress\n                        </Text>\n\n                        <Button \n                            onClick={handleSettings} \n                            className=\"py-1 px-6\"\n                        >\n                            Settings\n                        </Button>\n                    </div>\n\n                    {open? <Settings \n                            setOpen={setOpen} \n                            workMin={workMin}\n                            breakMin={breakMin}\n                            setWorkMin={setWorkMin}\n                            setBreakMin={setBreakMin}\n                        /> \n                        : \n                        <Time\n                            workMin={workMin}\n                            breakMin={breakMin}\n                            setWorkMin={setWorkMin}\n                            setBreakMin={setBreakMin}\n                        />\n                    }\n\n                </div>\n            </Card>\n\n            <Card className=\"py-4 col-span-2\">\n                <div className=\"flex justify-between\">\n                    <Text className=\"text-lg font-semibold mb-10\">\n                        Tasks\n                    </Text>\n\n                    <div \n                        className=\"text-2xl cursor-pointer\"\n                        onClick={handleTaskButton}    \n                    >\n                        +\n                    </div>\n                </div>\n                {\n                    !openTaskInput?\n                    (\n                        <section className=\"flex justify-center items-center text-center\">\n                            <div>\n                                <Text className=\"font-bold text-2xl\">\n                                    Stay focused\n                                </Text>\n\n                                <Text className=\"pt-2 pb-6 text-sm\">\n                                    Add tasks and assign them to your focus sessions\n                                </Text>\n\n                                <button \n                                    className=\"rounded-lg py-2 px-8 text-white bg-secondary\"\n                                    onClick={handleTaskButton}\n                                >\n                                    + Add a task\n                                </button>\n                            </div>\n                        </section>\n                    )\n                    :\n                    (\n                        <section className=\"\">                            \n                            <Text className=\"text-sm pt-1 mb-6\">\n                                Select a task for your session\n                            </Text>\n\n                            <form>\n                                <input \n                                    type=\"text\"\n                                    placeholder=\"Add a task\"\n                                    className=\"w-full py-2 pl-4 rounded \n                                    focus:outline-none bg-sidebar focus:border-b-2 \n                                    focus:border-b-tertiary \"\n                                    ref={inputRef}\n                                />\n                            </form>\n                        </section>\n                    )\n                }\n             \n            </Card>\n        </section>\n        \n    </section>\n  )\n}\n\nexport default Home\n\n\n","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Notes.jsx",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Signup.jsx",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Stopwatch.jsx",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Login.jsx",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/page/Timer.jsx",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/firebase.js",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Time.js",["96","97","98"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { CircularProgressbar, buildStyles  } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Button from '../elements/Button';\nimport Card from '../elements/Card';\n\nconst red = '#f54e4e';\nconst green = '#4aec8c';\n\nconst Time = ({ workMin, breakMin, setBreakMin, setWorkMin}) => {\n    \n    const [isPaused, setIsPaused] = useState(true);\n    const [secondsLeft, setSecondsLeft] = useState(0);\n    const [mode, setMode] = useState(\"work\");\n    const secondsLeftRef = useRef(secondsLeft);\n    const isPausedRef = useRef(isPaused);\n    const modeRef = useRef(mode);\n\n    \n    function tick(){\n        secondsLeftRef.current--;\n        setSecondsLeft(secondsLeftRef.current);\n    }\n\n    const initTimer = () => {\n        setSecondsLeft(workMin*60);\n    }\n\n    const switchMode = () => {\n        const nextMode = modeRef.current === 'work'? 'break': 'work';\n        const nextSeconds = (nextMode ==='work' ? workMin : breakMin)*60;\n        setMode(nextMode);\n        modeRef.current = nextMode;\n        setSecondsLeft(nextSeconds);\n        secondsLeftRef.current = nextSeconds;\n    }\n\n    useEffect(() => {\n        initTimer();\n\n        const interval = setInterval(()=>{\n            if(isPausedRef.current) {\n                return;\n            }\n\n            if(secondsLeftRef.current === 0){\n               return switchMode();\n            }\n\n            tick();\n            console.log(tick())\n            console.log(secondsLeftRef.current)\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, [workMin, breakMin, setBreakMin, setWorkMin])\n\n    const totalSeconds = mode === 'work'? workMin*60 : breakMin*60\n    const percentage = Math.round(secondsLeft/totalSeconds)*100;\n\n    const minutes = Math.floor(secondsLeft/60);\n    let seconds = secondsLeft%60;\n    if(seconds<10) {\n        seconds= '0' + seconds;\n    }\n\n    console.log(minutes,seconds)\n\n\n    return (\n        <>\n            <Card>\n                <div>\n                    <CircularProgressbar \n                        value={percentage} \n                        // text={`${66}%`} \n                        text={minutes+\":\"+seconds}\n                        styles={buildStyles({\n                        \n                        rotation: 0.5,                        \n                        strokeLinecap: 'butt',                                            \n                        pathTransitionDuration: 0.5,                    \n                        pathColor: red,\n                        textColor: '#f88',\n                        trailColor: '#d6d6d6',\n                        backgroundColor: '#3e98c7',\n                        })}  \n                    />\n                </div>\n\n                <div className=\"flex items-center justify-center mt-6 space-x-4\">\n                  {isPaused? (\n                    <Button className=\"py-1 px-6\">\n                        Play\n                    </Button>\n                  )\n                  :\n                  (\n                    <Button className=\"py-1 px-6\">\n                        Pause\n                    </Button>\n                  )}\n                    \n                </div>\n            </Card>\n        </>\n    )\n}\n\nexport default Time","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Navbar.jsx",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Sidebar.jsx",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/widgets/Settings.jsx",["99"],[],"import React, { useState } from 'react';\nimport Text from '../elements/Text';\nimport Card from '../elements/Card';\nimport Button from '../elements/Button';\nimport ReactSlider from 'react-slider';\n\nconst Settings = ({setOpen, workMin, breakMin, setBreakMin, setWorkMin}) => {\n    \n\n    const backButton = () => {\n        setOpen(false);\n    }\n\n    return(\n        <>\n            <Card>\n                <Text className=\"text-center text-white\">\n                    Focus time (in minutes): 45 {workMin}\n                </Text>\n                <ReactSlider\n                    className=\"horizontal-slider mt-2 border border-tertiary rounded-3xl h-10\"\n                    thumbClassName=\"example-thumb h-10 w-10 rounded-3xl bg-white\"\n                    trackClassName=\"example-track\"\n                    value={workMin}\n                    onChange={(e)=>setWorkMin(e)}\n                    min={1}\n                    max={120}\n                    renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n                />\n                \n            </Card>\n\n            <Card>\n                <Text className=\"text-center text-white\">\n                    Break time (in minutes): 15 {breakMin}\n                </Text>\n                <ReactSlider\n                    className=\"horizontal-slider mt-2 border border-tertiary rounded-3xl h-10\"\n                    thumbClassName=\"example-thumb h-10 w-10 rounded-3xl bg-white\"\n                    trackClassName=\"example-track\"\n                    value={breakMin}\n                    onChange={(e)=>setBreakMin(e)}\n                    min={1}\n                    max={120}\n                    renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n                />\n            </Card>\n\n            <div>\n                <Button onClick={backButton} className=\"py-1 px-6\">\n                    {\"<--- \"}Back\n                </Button>\n            </div>\n            \n        </>\n    )\n}\n\nexport default Settings","/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/elements/Text/index.js",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/elements/Card/index.js",[],[],"/Users/nelu/Desktop/Stuff/Projects/cgp-identify-platform/frontend/src/components/elements/Button/index.js",[],[],{"ruleId":"100","severity":1,"message":"101","line":1,"column":16,"nodeType":"102","messageId":"103","endLine":1,"endColumn":24},{"ruleId":"100","severity":1,"message":"104","line":1,"column":26,"nodeType":"102","messageId":"103","endLine":1,"endColumn":35},{"ruleId":"100","severity":1,"message":"105","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":10},{"ruleId":"100","severity":1,"message":"106","line":16,"column":27,"nodeType":"102","messageId":"103","endLine":16,"endColumn":43},{"ruleId":"100","severity":1,"message":"107","line":8,"column":7,"nodeType":"102","messageId":"103","endLine":8,"endColumn":12},{"ruleId":"100","severity":1,"message":"108","line":12,"column":22,"nodeType":"102","messageId":"103","endLine":12,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":56,"column":8,"nodeType":"111","endLine":56,"endColumn":52,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'bg' is defined but never used.","'setRemainingTime' is assigned a value but never used.","'green' is assigned a value but never used.","'setIsPaused' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initTimer' and 'switchMode'. Either include them or remove the dependency array.","ArrayExpression",["113"],{"desc":"114","fix":"115"},"Update the dependencies array to be: [workMin, breakMin, setBreakMin, setWorkMin, initTimer, switchMode]",{"range":"116","text":"117"},[1619,1663],"[workMin, breakMin, setBreakMin, setWorkMin, initTimer, switchMode]"]